<?xml version="1.0" encoding="UTF-8"?>
<rss  xmlns:atom="http://www.w3.org/2005/Atom" 
      xmlns:media="http://search.yahoo.com/mrss/" 
      xmlns:content="http://purl.org/rss/1.0/modules/content/" 
      xmlns:dc="http://purl.org/dc/elements/1.1/" 
      version="2.0">
<channel>
<title>claudio</title>
<link>https://mrglab.netlify.app/index.html</link>
<atom:link href="https://mrglab.netlify.app/index.xml" rel="self" type="application/rss+xml"/>
<description>A great sample blog</description>
<generator>quarto-1.3.287</generator>
<lastBuildDate>Fri, 31 Mar 2023 04:00:00 GMT</lastBuildDate>
<item>
  <title>Sampling from a Normal Distribution</title>
  <dc:creator>C. Gon</dc:creator>
  <link>https://mrglab.netlify.app/posts/post-with-code/index.html</link>
  <description><![CDATA[ 




<section id="sampling-from-a-normal-distribution" class="level1">
<h1>Sampling from a Normal Distribution</h1>
<div class="cell" data-execution_count="1">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb1-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># # First, import the necessary libraries</span></span>
<span id="cb1-2"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># import numpy as np</span></span>
<span id="cb1-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># import matplotlib.pyplot as plt</span></span>
<span id="cb1-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># from ipywidgets import interact, FloatSlider, IntSlider</span></span>
<span id="cb1-5"></span>
<span id="cb1-6"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># # Then, define the function that you want to interact with</span></span>
<span id="cb1-7"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># def plot_distribution(significance, sampling_error, variability, population_size):</span></span>
<span id="cb1-8"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#     # Determine the sample size based on the significance, sampling error, and variability</span></span>
<span id="cb1-9"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#     # Here, I'm using a simple formula for sample size calculation, you can replace it with your own formula</span></span>
<span id="cb1-10"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#     z_score = 1.96</span></span>
<span id="cb1-11"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#     sample_size = int((np.square(z_score)*variability*(1-variability))/np.square(sampling_error))</span></span>
<span id="cb1-12"></span>
<span id="cb1-13"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#     # Adjust sample size for finite population</span></span>
<span id="cb1-14"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#     adjusted_sample_size = int(sample_size / (1 + (sample_size - 1) / population_size))</span></span>
<span id="cb1-15"></span>
<span id="cb1-16"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#     # Create a normally distributed sample with the given parameters</span></span>
<span id="cb1-17"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#     sample = np.random.normal(loc=significance, scale=sampling_error, size=adjusted_sample_size)</span></span>
<span id="cb1-18"></span>
<span id="cb1-19"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#     # Create the histogram of the sample</span></span>
<span id="cb1-20"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#     plt.hist(sample, bins='auto')</span></span>
<span id="cb1-21"></span>
<span id="cb1-22"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#     # Show the plot</span></span>
<span id="cb1-23"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#     plt.show()</span></span>
<span id="cb1-24"></span>
<span id="cb1-25"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#     return adjusted_sample_size</span></span>
<span id="cb1-26"></span>
<span id="cb1-27"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># # Set up the interaction</span></span>
<span id="cb1-28"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># interact(plot_distribution, </span></span>
<span id="cb1-29"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#          significance=FloatSlider(value=0.5, min=0, max=1, step=0.01),</span></span>
<span id="cb1-30"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#          sampling_error=FloatSlider(value=0.05, min=0, max=1, step=0.01),</span></span>
<span id="cb1-31"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#          variability=FloatSlider(value=0.5, min=0, max=1, step=0.01),</span></span>
<span id="cb1-32"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#          population_size=IntSlider(value=1000, min=1, max=100000, step=1))</span></span></code></pre></div>
</div>
</section>
<section id="sampling-calculator" class="level1">
<h1>Sampling Calculator</h1>
<div class="cell" data-execution_count="2">
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb2-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># import math</span></span>
<span id="cb2-2"></span>
<span id="cb2-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># def calculate_sample_size(population_size, precision, sampling_error, variance):</span></span>
<span id="cb2-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#     z_square = (1.96)**2  # Z-value for a 95% confidence level is 1.96</span></span>
<span id="cb2-5"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#     e_square = (sampling_error / 100) ** 2</span></span>
<span id="cb2-6"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#     p = variance / 100</span></span>
<span id="cb2-7"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#     q = 1 - p</span></span>
<span id="cb2-8"></span>
<span id="cb2-9"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#     # Calculate Cochran's sample size</span></span>
<span id="cb2-10"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#     cochran_n = (z_square * p * q) / e_square</span></span>
<span id="cb2-11"></span>
<span id="cb2-12"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#     # Apply finite population correction</span></span>
<span id="cb2-13"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#     sample_size = cochran_n / (1 + ((cochran_n - 1) / population_size))</span></span>
<span id="cb2-14"></span>
<span id="cb2-15"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#     return math.ceil(sample_size)</span></span>
<span id="cb2-16"></span>
<span id="cb2-17"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># # Example inputs</span></span>
<span id="cb2-18"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># population_size = 10000</span></span>
<span id="cb2-19"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># precision = 0.05</span></span>
<span id="cb2-20"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># sampling_error = 5</span></span>
<span id="cb2-21"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># variance = 50</span></span>
<span id="cb2-22"></span>
<span id="cb2-23"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># sample_size = calculate_sample_size(population_size, precision, sampling_error, variance)</span></span>
<span id="cb2-24"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># print(f"Required sample size: {sample_size}")</span></span></code></pre></div>
</div>


</section>

 ]]></description>
  <category>news</category>
  <category>code</category>
  <category>analysis</category>
  <guid>https://mrglab.netlify.app/posts/post-with-code/index.html</guid>
  <pubDate>Fri, 31 Mar 2023 04:00:00 GMT</pubDate>
  <media:content url="https://mrglab.netlify.app/posts/post-with-code/image.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>ggplot2 demo</title>
  <dc:creator>Norah Jones</dc:creator>
  <link>https://mrglab.netlify.app/posts/welcome/index.html</link>
  <description><![CDATA[ 




<section id="air-quality" class="level2">
<h2 class="anchored" data-anchor-id="air-quality">Air Quality</h2>
<p>Figure&nbsp;1 further explores the impact of temperature on ozone level.</p>
<div class="cell">
<details>
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb1-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(ggplot2)</span>
<span id="cb1-2"></span>
<span id="cb1-3"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>(airquality, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(Temp, Ozone)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb1-4">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_point</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb1-5">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_smooth</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">method =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"loess"</span>)</span></code></pre></div>
</details>
<div class="cell-output-display">
<div id="fig-airquality" class="quarto-figure quarto-figure-center anchored">
<figure class="figure">
<p><img src="https://mrglab.netlify.app/posts/welcome/index_files/figure-html/fig-airquality-1.png" class="quarto-discovered-preview-image img-fluid figure-img" width="672"></p>
<p></p><figcaption class="figure-caption">Figure&nbsp;1: Temperature and ozone level.</figcaption><p></p>
</figure>
</div>
</div>
</div>


</section>

 ]]></description>
  <guid>https://mrglab.netlify.app/posts/welcome/index.html</guid>
  <pubDate>Sat, 22 May 2021 04:00:00 GMT</pubDate>
</item>
</channel>
</rss>
